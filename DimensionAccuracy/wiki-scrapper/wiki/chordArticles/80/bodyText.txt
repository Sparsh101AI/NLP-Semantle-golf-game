Ben Shneiderman (born August 21, 1947) is an American computer scientist, a Distinguished University Professor in the University of Maryland Department of Computer Science, which is part of the University of Maryland College of Computer, Mathematical, and Natural Sciences at the University of Maryland, College Park, and the founding director (1983-2000) of the   University of Maryland Human-Computer Interaction Lab. He conducted fundamental research in the field of human–computer interaction, developing new ideas, methods, and tools such as the direct manipulation interface, and his eight rules of design.
Born in New York, Shneiderman, attended the Bronx High School of Science, and received a BS in Mathematics and Physics from the City College of New York in 1968. He then went on to study at the State University of New York at Stony Brook, where he received an MS in Computer Science in 1972 and graduated with a PhD in 1973.
Shneiderman started his academic career at the State University of New York at Farmingdale in 1968 as instructor at the Department of Data Processing. In the last year before his graduation he was instructor at the Department of Computer Science of Stony Brook University (then called State University of New York at Stony Brook). In 1973 he was appointed assistant professor at the Indiana University, Department of Computer Science. In 1976 he moved to the University of Maryland. He started out as assistant professor in its Department of Information Systems Management, and became associate professor in 1979. In 1983 he moved to its Department of Computer Science as associate professor, and was promoted to full professor in 1989. In 1983 he was the Founding Director of its Human-Computer Interaction Lab, which he directed until 2000.
In 2002 his book Leonardo's Laptop: Human Needs and the New Computing Technologies was Winner of an IEEE-USA Award for Distinguished Contributions Furthering Public Understanding of the Profession.  His 2016 book, The New ABCs of Research: Achieving Breakthrough Collaborations, encourages applied and basic research to be combined. In 2019, he published Encounters with HCI Pioneers: A Personal History and Photo Journal, and Human-Centered AI in 2022.
Shneiderman was inducted as a Fellow of the Association for Computing Machinery in 1997, a Fellow of the American Association for the Advancement of Science in 2001, a Member of the National Academy of Engineering in 2010, an IEEE Fellow in 2012, and a Fellow of the National Academy of Inventors in 2015. He is an ACM CHI Academy Member and received their Lifetime Achievement Award in 2001.  He received the IEEE Visualization Career Award in 2012 and was inducted into the IEEE VIS Academy in 2019. In 2021 he received the InfoVis Conference Test of Time Award with co-authors Ben Bederson and Martin M. Wattenberg.
He received Honorary Doctorates from the University of Guelph (Canada) in 1995, the University of Castile-La Mancha (Spain) in 2010, Stony Brook University in 2015, the University of Melbourne in 2017, Swansea University (in Wales, UK) in 2018, and the University of Pretoria (in South Africa) in 2018.
Shneiderman resides in Bethesda, Maryland. He is the nephew of photographer David Seymour.
In the 1973 article "Flowchart techniques for structured programming" presented at a 1973 SIGPLAN meeting Isaac Nassi and Shneiderman argued:
The new model technique for structured programming they presented has become known as the Nassi–Shneiderman diagram; a graphical representation of the design of structured software.
In the 1970s Shneiderman continued to study programmers, and the use of flow charts. In the 1977 article "Experimental investigations of the utility of detailed flowcharts in programming" Shneiderman et al. summarized the origin and status quo of flowcharts in computer programming:
Flowcharts have been a part of computer programming since the introduction of computers in the 1940s. In 1947 Goldstein and von Neumann [7] presented a system of describing processes using operation, assertion, and alternative boxes. They felt that "coding begins with the drawing of flow diagram." Prior to coding, the algorithm had been identified and understood. The flowchart represented a high level definition of the solution to be implemented on a machine. Although they were working only with numerical algorithms, they proposed a programming methodology which has since become standard practice in the computer programming field.
Furthermore, Shneiderman had conducted experiments which suggested that flowcharts were not helpful for writing, understanding, or modifying computer programs. At the end of their 1977 paper, Shneiderman et al. concluded:
Although our original intention was to ascertain under which conditions detailed flowcharts were most helpful, our repeated negative results have led us to a more skeptical opinion of the utility of detailed flowcharts under modern programming conditions. We repeatedly selected problems and tried to create test conditions which would favor the flowchart groups, but found no statistically significant differences between the flowchart and non-flowchart groups. In some cases the mean scores for the non-flowchart groups even surpassed the means for the flowchart groups. We conjecture that detailed flowcharts are merely a redundant presentation of the information contained in the programming language statements. The flowcharts may even be at a disadvantage because they are not as complete (omitting declarations, statement labels, and input/output formats) and require many more pages than do the concise programming language statements.In 1986, he published the first edition (now on its sixth edition) of his book "Designing the User Interface: Strategies for Effective Human-Computer Interaction." Included in this book is his most popular list of "Eight Golden Rules of Interface Design," which read:

Strive for consistency. Consistent sequences of actions should be required in similar situations ...
Enable frequent users to use shortcuts. As the frequency of use increases, so do the user's desires to reduce the number of interactions ...
Offer informative feedback. For every operator action, there should be some system feedback ...
Design dialog to yield closure. Sequences of actions should be organized into groups with a beginning, middle, and end ...
Offer simple error handling. As much as possible, design the system so the user cannot make a serious error ...
Permit easy reversal of actions. This feature relieves anxiety, since the user knows that errors can be undone ...
Support internal locus of control. Experienced operators strongly desire the sense that they are in charge of the system and that the system responds to their actions. Design the system to make users the initiators of actions rather than the responders.
Reduce short-term memory load. The limitation of human information processing in short-term memory requires that displays be kept simple, multiple page displays be consolidated, window-motion frequency be reduced, and sufficient training time be allotted for codes, mnemonics, and sequences of actions.These guidelines are frequently taught in courses on Human-Computer Interaction.
In 2003, Ben Bederson and Shneiderman coauthored the book "The Craft of Information Visualization: Readings and Reflections". Included in Chapter 8: Theories for Understanding Information Visualization in this book are five goals of theories for HCI practitioners and researchers, which read:

The typical goals of theories are to enable practitioners and researchers to: 

Describe objects and actions in a consistent and clear manner to enable cooperation
Explain processes to support education and training
Predict performance in normal and novel situations so as to increase the chances of success
Prescribe guidelines, recommend best practices, and caution about dangers
Generate novel ideas to improve research and practice.These goals are frequently taught in courses on Human-Computer Interaction and cited in works by authors such as Yvonne Rogers, Victor Kaptelinin, and Bonnie Nardi.
Shneiderman's cognitive analysis of user needs led to principles of direct manipulation interface design in 1982: (1) continuous representation of the objects and actions, (2) rapid, incremental, and reversible actions, and (3) physical actions and gestures to replace typed commands, which enabled designers to craft more effective graphical user interfaces. He applied those principles to design innovative user interfaces such as the highlighted selectable phrases in text, that were used in the commercially successful Hyperties.  Hyperties was used to author the world's first electronic scientific journal issue, which was the July 1988 issue of the Communications of the ACM with seven papers from the 1987 Hypertext conference.  It was made available as a floppy disk accompanying the printed journal. Tim Berners-Lee cited this disk as the source for his "hot spots" in his Spring 1989 manifesto for the World Wide Web.  Hyperties was also used to create the world's first commercial electronic book, Hypertext Hands-On! in 1988.
Direct manipulation concepts led to touchscreen interfaces for home controls, finger-painting, and the now ubiquitous small touchscreen keyboards. The development of the "Lift-off strategy" by University of Maryland Human–Computer Interaction Lab (HCIL) researchers enabled users to touch the screen, getting feedback as to what will be selected, adjust their finger position, and complete the selection by lifting the finger off the screen.
The HCIL team applied direct manipulation principles for touchscreen home automation systems, finger-painting programs, and the double-box range sliders
that gained prominence by their inclusion in Spotfire.  The visual presentation inherent in direct manipulation emphasized the opportunity for information visualization.
In 1997, Pattie Maes and Shneiderman had a public debate on Direct Manipulation vs. Interface Agents at CHI'97 and IUI 1997 (with the IUI Proceedings showing two separate papers but no remaining internet trace of the panel.) Those events helped define the two current dominant themes in human-computer interaction: direct human control of computer operations via visual user interfaces vs delegation of control to interface agents that know the users desires and act on their behalf, thereby requiring less human attention. Their debate continues to be highly cited (with 479 citations in January 2022 for the original CHI debate), especially in user interface design communities where return debates took place at the ACM CHI 2017 and ACM CHI 2021 conferences.
His major work in recent years has been on information visualization, originating the treemap concept for hierarchical data. Treemaps are implemented in most information visualization tools including Spotfire, Tableau Software, QlikView, SAS, JMP, and Microsoft Excel. Treemaps are included in hard drive exploration tools, stock market data analysis, census systems, election data, gene expression, and data journalism. The artistic side of treemaps are on view in the Treemap Art Project.
He also developed dynamic queries sliders with multiple coordinated displays that are a key component of Spotfire, which was acquired by TIBCO in 2007.  His work continued on visual analysis tools for time series data, TimeSearcher, high dimensional data, Hierarchical Clustering Explorer, and social network data, SocialAction.  Shneiderman contributed to the widely used social network analysis and visualization tool NodeXL.
Current work deals with visualization of temporal event sequences, such as found in Electronic Health Records, in systems such as LifeLines2  and EventFlow. These tools visualize the categorical data that make up a single patient history and they present an aggregated view that enables analysts to find patterns in large patient history databases.
In 2012, Jeffrey Heer and Shneiderman coauthored the article "Interactive Dynamics for Visual Analysis" in Association for Computing Machinery Queue vol. 10, no. 2. Included in this article is a taxonomy of interactive dynamics to assist researchers, designers, analysts, educators, and students in evaluating and creating visual analysis tools. The taxonomy consists of 12 task types grouped into three high-level categories, as shown below.

He also defined the research area of universal usability to encourage greater attention to diverse users, languages, cultures, screen sizes, network speeds, and technology platforms.
The current topic of Shneiderman's Scholarship is Human-Centered Artificial Intelligence
Shneiderman proposes an alternative vision of AI which focuses on the need for reliable, safe and trustworthy systems that enable people to benefit from the power of AI while remaining in control.  Shneiderman emphasizes the need for technologies that "augment, amplify, empower, and enhance humans rather than replace them".
List of articles:
Shneiderman, Ben, Human-Centered AI, Oxford University Press, 2022
Shneiderman, Ben. The New ABCs of Research: Achieving Breakthrough Collaborations; Oxford University Press, 2016.
Shneiderman, Ben. Software Psychology: Human Factors in Computer and Information Systems; Little, Brown and Co, 1980.
Shneiderman, Ben. Designing the User Interface: Strategies for Effective Human–Computer Interaction, 1st edition. Addison-Wesley, 1986; 2nd ed. 1992; 3rd ed. 1998; 4th ed. 2005; 5th ed. 2010; 6th ed., 2016.
Card, Stuart K., Jock D. Mackinlay, and Ben Shneiderman, eds. Readings in Information Visualization: Using Vision to Think. Morgan Kaufmann, 1999.
Shneiderman, Ben. Leonardo's Laptop: Human Needs and the New Computing Technologies; MIT Press, 2002.
Hansen, Derek, Ben Shneiderman, and Marc A. Smith. Analyzing social media networks with NodeXL: Insights from a connected world. Morgan Kaufmann, 2010.
Johnson, Brian, and Ben Shneiderman. "Tree-maps: A space-filling approach to the visualization of hierarchical information structures." Visualization, 1991. Visualization'91, Proceedings., IEEE Conference on. IEEE, 1991.
Shneiderman, Ben. "Tree visualization with tree-maps: 2-d space-filling approach." ACM Transactions on Graphics 11.1 (1992): 92–99.
Ahlberg, Christopher, and Ben Shneiderman. "Visual information seeking: tight coupling of dynamic query filters with starfield displays." Proceedings of the SIGCHI conference on Human factors in computing systems. ACM, 1994.
Shneiderman, Ben. "The eyes have it: A task by data type taxonomy for information visualizations." Visual Languages, 1996. Proceedings., IEEE Symposium on. IEEE, 1996.
Bederson, B., Shneiderman, B. 2003. The Craft of Information Visualization: Readings and Reflections. Morgan Kaufmann.
Heer, J., Shneiderman, B. 2012. Interactive Dynamics for Visual Analysis. ACM Queue, 10(2), Issue 2.
Shneiderman, B. (2020). Human-Centered Artificial Intelligence: Reliable, Safe & Trustworthy. International Journal of Human–Computer Interaction, 1–10.Ben Shneiderman's home page
Ben Shneiderman papers at the University of Maryland Libraries
Ben Shneiderman's channel on YouTube
Treemap Art Project
Interviewed by Alan Macfarlane 7 August 2009 (video)